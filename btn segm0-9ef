/*
 * AsmCode.asm
 *
 *  Created: 19.02.2015 10:18:11
 *   Author: opilane
 */ 

 ldi r16, 0xff  //aktivacija vseh vihodov_portov
 out ddrd, r16
 out ddrb, r16
 ldi r17, 0
 out ddrc, r17
  
  //chistka
  ldi r16, 0xff
 out portd, r16
 ldi r16, 0b1000_0011
 out portb, r16
 ldi r16, 0b0000_0000
 out portb, r16
/////////////////////////////////////////////////
rjmp Tsykkel   //pereprigivaem v nashalo chtenija knopok
Start1:     
ldi r16, ~0x06
 rcall segment2
 rcall aeg       
ret  

Start2:     
ldi r16, ~0x5b
 rcall segment2
 rcall aeg       
ret  

start3:
ldi r16, ~0x4f
 rcall segment2
 rcall aeg
ret

start4:
ldi r16, ~0x66
 rcall segment2
 rcall aeg
ret

Tsykkel:           //KNOPKI  chtenie              ;mдrgend programmis, mille jдrgi on vхimalik pццrduda siia kohta                                               ;programmis
 ldi r16, 0b1011_1111                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16         ;registri r16 sisu saadetakse port D vдljundisse
nop
in r17, pinc                       ;port c sisendis olev info pannakse registrisse r17
andi r17, 0x04                   ;registri r17 sisule tehakse and tehe numbriga 00000010, selline mask                                       ;vхimaldab kontrollida ainult PC1 sisendit
breq Start1

ldi r16, 0b1011_1111                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x02 
breq Start2                      ;kui sisendis PC1 oli null, siis hьpatakse kohta Loop, kui PC1 oli ьks, siis                                       ;tдidetakse jдrgmine kдsk

ldi r16, 0b0111_1111                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x02 
breq Start3 //start3   

ldi r16, 0b1110_1111                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x04
breq Start4  //start4  

ldi r16, 0b1110_1111                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x02
breq Start5 // start5

ldi r16, 0b1101_1111                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x02
breq start6 

ldi r16, 0b1111_1011                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x04
breq start7

ldi r16, 0b1111_1011                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x02
breq start8

ldi r16, 0b1111_0111                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x02
breq start9 

ldi r16, 0b1111_1110                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x02
breq start0 

ldi r16, 0b1111_1110                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x04
breq startE

ldi r16, 0b1111_1101                        ;registrisse r16 pannakse number 0xfe ehk 0b1111111
out portd, r16      
nop
in r17, pinc
andi r17, 0x02
breq startF
rjmp Tsykkel   

//////////////////////////////////////////////////////////
start9:
ldi r16, ~0x6f // 9
 rcall segment2
 rcall aeg
ret

startE:
ldi r16, ~0x79
 rcall segment2
 rcall aeg
ret
startF:
ldi r16, ~0x71
 rcall segment2
 rcall aeg
ret

Start0:     
ldi r16, ~0x3f
 rcall segment2
 rcall aeg       
ret

start5:
ldi r16, ~0x6d
 rcall segment2
 rcall aeg
ret
start6:
ldi r16, ~0x7d
 rcall segment2
 rcall aeg
ret
start7:
ldi r16, ~0x07
 rcall segment2
 rcall aeg
ret
start8:
ldi r16, ~0x7f
 rcall segment2
 rcall aeg
ret
  
  
aeg:
; ============================= 
;    delay loop generator 
;     1000000 cycles:
; ----------------------------- 
; delaying 999999 cycles:
          ldi  R17, $09
WGLOOP0:  ldi  R18, $BC
WGLOOP1:  ldi  R19, $C4
WGLOOP2:  dec  R19
          brne WGLOOP2
          dec  R18
          brne WGLOOP1
          dec  R17
          brne WGLOOP0
; ----------------------------- 
; delaying 1 cycle:
          nop
; ============================= 

ret                         ;tegu on lхputu tsьkliga

/*
segment1:
//out portd, r16              ;registri r16 sisu saadetakse port D vдljundisse
 
sbi portb, 1                 ;pordi B esimene bitt pannakse ьheks
cbi portb, 1                 ;pordi B esimene bitt pannakse nulliks
ret
*/
segment2: 
out portd, r16 
sbi portb, 0                 ;pordi B esimene bitt pannakse ьheks
cbi portb, 0                 ;pordi B esimene bitt pannakse nulliks
ret  

